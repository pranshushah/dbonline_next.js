### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Database {
  """details of the  database creator"""
  author: User!
  authorId: String!
  createdAt: String!
  databaseName: String!
  databaseType: DatabaseType!

  """id of the user"""
  id: ID!
  mainTableDetails: String!
  modifiedAt: String!
  numberOfForks: Int!

  """details of the original database creator"""
  originalAuthor: User
  originalAuthorId: String
  tableDndDetails: String!
  views: Int!
}

"""types of database are supported"""
enum DatabaseType {
  mysql
  oracle
  postgresql
}

type Mutation {
  CreateDatabase(data: addDatabase!): Database
  CreateDatabases(data: [addDatabase]!): Boolean
}

type Query {
  greeting(name: String! = "pranshu"): String!
}

type User {
  """all the databases created by user"""
  allDatabaseInfo: [Database!]!

  """email of the user"""
  email: String!

  """id of the user"""
  id: ID!

  """name of the user"""
  name: String!

  """photo of the user"""
  photo: String!
}

input addDatabase {
  """date of database when it was created in string form"""
  createdAt: String!

  """name of the database"""
  databaseName: String!
  databaseType: DatabaseType!

  """id of database. if this field is not present we will id by ourselves"""
  id: String!

  """details of the all tables in string form"""
  mainTableDetails: String!

  """date of database when it was last modified in string form"""
  modifiedAt: String!

  """cordinates,colour of tables in string form """
  tableDndDetails: String!

  """number of tables in """
  tables: [String]!
}
